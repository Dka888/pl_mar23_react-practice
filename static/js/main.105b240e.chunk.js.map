{"version":3,"sources":["api/users.js","api/categories.js","App.jsx","api/products.js","index.jsx"],"names":["id","name","sex","title","icon","ownerId","products","categoryId","map","product","category","categoriesFromServer","find","catID","user","usersFromServer","users","App","useState","selectedUser","setSelectedUser","query","setQuery","selectedCategory","setSelectedCategory","isSortedById","setIsSortedById","isSortedByProduct","setIsSortedByProduct","isSortedByCategory","setIsSortedByCategory","isSortedByUser","setIsSortedByUser","filteredProduct","useMemo","newProduct","trimmedQuery","trim","split","filter","Boolean","join","lowerQuery","toLowerCase","includes","length","handleToggleSort","type","sort","a","b","localeCompare","className","href","onClick","placeholder","value","onChange","event","target","prevCategory","prod","handleAddCategory","cn","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.105b240e.chunk.js","sourcesContent":["export default [\n  { id: 1, name: 'Roma', sex: 'm' },\n  { id: 2, name: 'Anna', sex: 'f' },\n  { id: 3, name: 'Max', sex: 'm' },\n  { id: 4, name: 'John', sex: 'm' },\n];\n","export default [\n  {\n    id: 1,\n    title: 'Grocery',\n    icon: '🍞',\n    ownerId: 2,\n  },\n  {\n    id: 2,\n    title: 'Drinks',\n    icon: '🍺',\n    ownerId: 1,\n  },\n  {\n    id: 3,\n    title: 'Fruits',\n    icon: '🍏',\n    ownerId: 2,\n  },\n  {\n    id: 4,\n    title: 'Electronics',\n    icon: '💻',\n    ownerId: 1,\n  },\n  {\n    id: 5,\n    title: 'Clothes',\n    icon: '👚',\n    ownerId: 3,\n  },\n];\n","import React, { useState, useMemo } from 'react';\nimport './App.scss';\nimport cn from 'classnames';\n\nimport usersFromServer from './api/users';\nimport categoriesFromServer from './api/categories';\nimport productsFromServer from './api/products';\n\nconst products = productsFromServer.map((product) => {\n  const category = categoriesFromServer\n    .find(catID => catID.id === product.categoryId) || null;\n  const user = usersFromServer\n    .find(users => users.id === category.ownerId) || null;\n\n  return {\n    ...product,\n    category,\n    user,\n  };\n});\n\nexport const App = () => {\n  const [selectedUser, setSelectedUser] = useState('');\n  const [query, setQuery] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState([]);\n  const [isSortedById, setIsSortedById] = useState(0);\n  const [isSortedByProduct, setIsSortedByProduct] = useState(0);\n  const [isSortedByCategory, setIsSortedByCategory] = useState(0);\n  const [isSortedByUser, setIsSortedByUser] = useState(0);\n\n  const handleAddCategory = (product) => {\n    if (selectedCategory.includes(product)) {\n      setSelectedCategory(prevCategory => prevCategory\n        .filter(prod => prod !== product));\n    } else {\n      setSelectedCategory(prevCategory => [...prevCategory, product]);\n    }\n  };\n\n  const filteredProduct = useMemo(() => {\n    let newProduct = products;\n\n    const trimmedQuery = query.trim()\n      .split(' ')\n      .filter(Boolean)\n      .join(' ');\n\n    if (trimmedQuery) {\n      newProduct = newProduct.filter((product) => {\n        const lowerQuery = trimmedQuery.toLowerCase();\n\n        const names = product.name.toLowerCase();\n\n        return names.includes(lowerQuery);\n      });\n    }\n\n    if (selectedUser) {\n      newProduct = newProduct\n        .filter(product => product.user.name === selectedUser);\n    }\n\n    if (selectedCategory.length) {\n      newProduct = newProduct\n        .filter(product => selectedCategory.includes(product.category.title));\n    }\n\n    return newProduct;\n  }, [selectedUser, selectedCategory, query]);\n\n  const handleToggleSort = (type) => {\n    setIsSortedById(0);\n    setIsSortedByProduct(0);\n    setIsSortedByCategory(0);\n    setIsSortedByUser(0);\n\n    switch (type) {\n      case 'id':\n        if (isSortedById === 1) {\n          filteredProduct.sort((a, b) => b.id - a.id);\n          setIsSortedById(isSortedById + 1);\n        } else if (isSortedById === 0) {\n          filteredProduct.sort((a, b) => a.id - b.id);\n          setIsSortedById(isSortedById + 1);\n        } else {\n          handleToggleSort();\n        }\n\n        break;\n      case 'product':\n\n        if (isSortedByProduct === 1) {\n          filteredProduct.sort((a, b) => b.name.localeCompare(a.name));\n          setIsSortedByProduct(isSortedByProduct + 1);\n        } else if (isSortedByProduct === 0) {\n          filteredProduct.sort((a, b) => a.name.localeCompare(b.name));\n          setIsSortedByProduct(isSortedByProduct + 1);\n        } else {\n          handleToggleSort();\n        }\n\n        break;\n      case 'category':\n        if (isSortedByCategory === 1) {\n          filteredProduct.sort((a, b) => b.name.localeCompare(a.name));\n          setIsSortedByCategory(isSortedByCategory + 1);\n        } else if (isSortedByCategory === 0) {\n          filteredProduct.sort((a, b) => a.name.localeCompare(b.name));\n          setIsSortedByCategory(isSortedByCategory + 1);\n        } else {\n          handleToggleSort();\n        }\n\n        break;\n      case 'user':\n        if (isSortedByUser === 0) {\n          filteredProduct.sort((a, b) => a.name.localeCompare(b.name));\n          setIsSortedByUser(isSortedByUser + 1);\n        } else if (isSortedByUser === 1) {\n          filteredProduct.sort((a, b) => b.name.localeCompare(a.name));\n          setIsSortedByUser(isSortedByUser + 1);\n        } else {\n          handleToggleSort();\n        }\n\n        break;\n\n      default:\n        filteredProduct.sort((a, b) => a.id - b.id);\n        setIsSortedById(0);\n    }\n  };\n\n  const handleReset = () => {\n    setQuery('');\n    setSelectedCategory([]);\n    setSelectedUser('');\n    if (!isSortedById) {\n      handleToggleSort();\n    }\n  };\n\n  return (\n    <div className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">Product Categories</h1>\n\n        <div className=\"block\">\n          <nav className=\"panel\">\n            <p className=\"panel-heading\">Filters</p>\n\n            <p className=\"panel-tabs has-text-weight-bold\">\n              <a\n                data-cy=\"FilterAllUsers\"\n                href=\"#/\"\n                onClick={() => setSelectedUser('')}\n                className={!selectedUser && 'is-active'}\n              >\n                All\n              </a>\n              {usersFromServer\n                .map(user => (\n                  <a\n                    data-cy=\"FilterUser\"\n                    href={`#/${user.name}`}\n                    onClick={() => setSelectedUser(user.name)}\n                    className={user.name === selectedUser && 'is-active'}\n                  >\n                    {user.name}\n                  </a>\n                ))}\n            </p>\n\n            <div className=\"panel-block\">\n              <p className=\"control has-icons-left has-icons-right\">\n                <input\n                  data-cy=\"SearchField\"\n                  type=\"text\"\n                  className=\"input\"\n                  placeholder=\"Search\"\n                  value={query}\n                  onChange={event => setQuery(event.target.value)}\n                />\n\n                <span className=\"icon is-left\">\n                  <i className=\"fas fa-search\" aria-hidden=\"true\" />\n                </span>\n\n                {query && (\n                  <span className=\"icon is-right\">\n                    {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n                    <button\n                      data-cy=\"ClearButton\"\n                      type=\"button\"\n                      className=\"delete\"\n                    />\n                  </span>\n                )}\n              </p>\n            </div>\n\n            <div className=\"panel-block is-flex-wrap-wrap\">\n              <a\n                href=\"#/\"\n                data-cy=\"AllCategories\"\n                className={!selectedCategory.length\n                  ? 'button is-success mr-6'\n                  : 'button is-success mr-6 is-outlined'}\n                onClick={() => setSelectedCategory([])}\n              >\n                All\n              </a>\n\n              {categoriesFromServer.map(product => (\n                <a\n                  data-cy=\"Category\"\n                  className={selectedCategory.includes(product.title)\n                    ? 'button mr-2 my-1 is-info'\n                    : 'button mr-2 my-1'}\n                  href={`#/${product.title}`}\n                  onClick={() => handleAddCategory(product.title)}\n                >\n                  {' '}\n                  {product.title}\n                </a>\n              ))}\n\n            </div>\n\n            <div className=\"panel-block\">\n              <a\n                data-cy=\"ResetAllButton\"\n                href=\"#/\"\n                className=\"button is-link is-outlined is-fullwidth\"\n                onClick={handleReset}\n              >\n                Reset all filters\n              </a>\n            </div>\n          </nav>\n        </div>\n        {filteredProduct.length\n          ? (\n            <table\n              data-cy=\"ProductTable\"\n              className=\"table is-striped is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>\n                    <span className=\"is-flex is-flex-wrap-nowrap\">\n                      ID\n\n                      <a\n                        href=\"#/\"\n                        onClick={() => handleToggleSort('id')}\n                      >\n                        <span className=\"icon\">\n                          <i\n                            data-cy=\"SortIcon\"\n                            className={cn({\n                              'fas fa-sort-up': isSortedById === 1,\n                              'fas fa-sort-down': isSortedById === 2,\n                              'fas fa-sort': isSortedById === 0,\n                            })}\n\n                          />\n                        </span>\n                      </a>\n                    </span>\n                  </th>\n\n                  <th>\n                    <span className=\"is-flex is-flex-wrap-nowrap\">\n                      Product\n\n                      <a\n                        href=\"#/\"\n                        onClick={() => handleToggleSort('product')}\n                      >\n                        <span className=\"icon\">\n                          <i\n                            data-cy=\"SortIcon\"\n                            className={cn({\n                              'fas fa-sort-up': isSortedByProduct === 1,\n                              'fas fa-sort-down': isSortedByProduct === 2,\n                              'fas fa-sort': isSortedByProduct === 0,\n                            })}\n                          />\n                        </span>\n                      </a>\n                    </span>\n                  </th>\n\n                  <th>\n                    <span className=\"is-flex is-flex-wrap-nowrap\">\n                      Category\n\n                      <a href=\"#/\" onClick={() => handleToggleSort('category')}>\n                        <span className=\"icon\">\n                          <i\n                            data-cy=\"SortIcon\"\n                            className={cn({\n                              'fas fa-sort-up': isSortedByCategory === 1,\n                              'fas fa-sort-down': isSortedByCategory === 2,\n                              'fas fa-sort': isSortedByCategory === 0,\n                            })}\n                          />\n                        </span>\n                      </a>\n                    </span>\n                  </th>\n\n                  <th>\n                    <span className=\"is-flex is-flex-wrap-nowrap\">\n                      User\n\n                      <a href=\"#/\" onClick={() => handleToggleSort('user')}>\n                        <span\n                          className=\"icon\"\n                        >\n                          <i\n                            data-cy=\"SortIcon\"\n                            className={cn({\n                              'fas fa-sort-up': isSortedByUser === 1,\n                              'fas fa-sort-down': isSortedByUser === 2,\n                              'fas fa-sort': isSortedByUser === 0,\n                            })}\n                          />\n                        </span>\n                      </a>\n                    </span>\n                  </th>\n                </tr>\n              </thead>\n\n              <tbody>\n\n                {filteredProduct.map(product => (\n                  <tr data-cy=\"Product\">\n                    <td className=\"has-text-weight-bold\" data-cy=\"ProductId\">\n                      {product.id}\n                    </td>\n\n                    <td data-cy=\"ProductName\">{product.name}</td>\n                    <td data-cy=\"ProductCategory\">\n                      {product.category.icon}\n                      {' '}\n                      -\n                      {' '}\n                      {product.category.title}\n                    </td>\n\n                    <td\n                      data-cy=\"ProductUser\"\n                      className={\n                      product.user.sex === 'm'\n                        ? 'has-text-link'\n                        : 'has-text-danger'\n                    }\n                    >\n                      {product.user.name}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          )\n          : (\n            <div className=\"box table-container\">\n              <p data-cy=\"NoMatchingMessage\">\n                No products matching selected criteria\n              </p>\n            </div>\n          )}\n\n      </div>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Milk',\n    categoryId: 2,\n  },\n  {\n    id: 2,\n    name: 'Bread',\n    categoryId: 1,\n  },\n  {\n    id: 3,\n    name: 'Eggs',\n    categoryId: 1,\n  },\n  {\n    id: 4,\n    name: 'Jacket',\n    categoryId: 5,\n  },\n  {\n    id: 5,\n    name: 'Sugar',\n    categoryId: 1,\n  },\n  {\n    id: 6,\n    name: 'Banana',\n    categoryId: 3,\n  },\n  {\n    id: 7,\n    name: 'Beer',\n    categoryId: 2,\n  },\n  {\n    id: 8,\n    name: 'Socks',\n    categoryId: 5,\n  },\n  {\n    id: 9,\n    name: 'Apples',\n    categoryId: 3,\n  },\n];\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}